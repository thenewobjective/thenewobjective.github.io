{"version":3,"file":"index.mjs","mappings":"qBAAA,IAAIA,EAAM,CACT,aAAc,GACd,aAAc,IACd,aAAc,KAIf,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,EAC5B,CACA,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,CACP,CACA,OAAOP,EAAIE,EACZ,CACAD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,EACpB,EACAC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,G,0KCvBhBY,EAA2B,CAAC,EAGhC,SAASV,EAAoBW,GAE5B,IAAIC,EAAeF,EAAyBC,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaH,QAGrB,IAAID,EAASE,EAAyBC,GAAY,CAGjDF,QAAS,CAAC,GAOX,OAHAK,EAAoBH,GAAUH,EAAQA,EAAOC,QAAST,GAG/CQ,EAAOC,OACf,CCtBAT,EAAoBC,EAAI,CAACc,EAAKC,IAAUV,OAAOW,UAAUC,eAAeC,KAAKJ,EAAKC,G,MCAlF,IAAII,EAIJ,GAH+B,6BAARC,MAAkBD,cAAwBC,MAG5DD,EAAW,MAAM,IAAIjB,MAAM,yDAChCiB,EAAYA,EAAUE,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,IAAIA,QAAQ,YAAa,KACpFtB,EAAoBuB,EAAIH,C,WCFjB,MAAeI,EAClB,gBAASC,GAAS,eAAlB,aAASA,CAAS,aAClB,iBAASC,GAAU,eAAnB,cAASA,CAAU,aACnB,cAASC,GAAO,eAAhB,WAASA,CAAO,cCFb,MAAMC,EAEIH,UACAC,WAFb,WAAAG,CACaJ,EACAC,GADA,KAAAD,UAAAA,EACA,KAAAC,WAAAA,CACT,CAEJ,OAAAI,CAAQhC,GACJ,MAAMiC,EAAOC,KAAKN,WAAWO,IAAInC,GACjCkC,KAAKP,UAAUS,QAAQH,EAC3B,ECdG,MAAMI,EAEIrC,GACAsC,KACAf,IAHb,WAAAQ,CACa/B,EACAsC,EACAf,GAFA,KAAAvB,GAAAA,EACA,KAAAsC,KAAAA,EACA,KAAAf,IAAAA,CACT,ECFD,MAAMgB,EACT,GAAAJ,CAAInC,GACA,MACIuB,EAAM,OAAQ,KAAYvB,YAC9B,OAAO,IAAIqC,EAAKrC,EAFH,GAEauB,EAC9B,ECLG,MAAMiB,EACUC,YAAnB,WAAAV,CAAmBU,GAAA,KAAAA,YAAAA,CAA4B,CAE/C,OAAAL,EAAQ,GAAEpC,EAAE,KAAEsC,EAAI,IAAEf,IAChB,MAAMmB,EAAWlC,OAAOmC,OAAOC,SAASC,cAAc,OAAQ,CAC1DC,IAAKvB,EACLwB,MAAOT,EACPU,OAAQV,EACRW,IAAK,QAAQjD,MAEjBkC,KAAKO,YAAYS,YAAYR,EACjC,ECTG,MAAMS,UAAoBzB,EAKR1B,GAJrB,GAA8B,IAAIwC,EAAcI,SAASQ,MAAzD,aAAkBzB,GAAS,eAA3B,aAAkBA,CAAS,aAC3B,GAA+B,IAAIY,EAAnC,cAAkBX,GAAU,eAA5B,cAAkBA,CAAU,aAC5B,GAA4B,IAAIE,EAAWI,KAAKP,UAAWO,KAAKN,YAAhE,WAAkBC,GAAO,eAAzB,WAAkBA,CAAO,aAEzB,WAAAE,CAAqB/B,GAAcqD,QAAd,KAAArD,GAAAA,CAAsB,CAE3C,MAAAsD,GAAWpB,KAAKL,QAAQG,QAAQE,KAAKlC,GAAK,ECVhC,CACV,IAAImD,EAAY,GAChB,IAAIA,EAAY,GAChB,IAAIA,EAAY,IAGdI,SAAQtB,GAAQA,EAAKqB,U","sources":["webpack://@mlhaufe/tile-engine/./src/data/assets/ sync ^\\.\\/.*\\-.*\\.png$","webpack://@mlhaufe/tile-engine/webpack/bootstrap","webpack://@mlhaufe/tile-engine/webpack/runtime/hasOwnProperty shorthand","webpack://@mlhaufe/tile-engine/webpack/runtime/publicPath","webpack://@mlhaufe/tile-engine/./src/application/Control.mts","webpack://@mlhaufe/tile-engine/./src/application/usecases/RenderTile.mts","webpack://@mlhaufe/tile-engine/./src/domain/Tile.mts","webpack://@mlhaufe/tile-engine/./src/data/TileRepository.mts","webpack://@mlhaufe/tile-engine/./src/presentation/Tile/TilePresenter.mts","webpack://@mlhaufe/tile-engine/./src/presentation/Tile/TileControl.mts","webpack://@mlhaufe/tile-engine/./src/index.mts"],"sourcesContent":["var map = {\n\t\"./0-64.png\": 88,\n\t\"./1-64.png\": 227,\n\t\"./2-64.png\": 178\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 981;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (typeof import.meta.url === \"string\") scriptUrl = import.meta.url\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","import { Presenter } from \"./Presenter.mjs\";\r\nimport { UseCase } from \"./UseCase.mjs\";\r\nimport { Repository } from \"./Repository.mjs\";\r\n\r\nexport abstract class Control {\r\n    accessor presenter: Presenter<any> | undefined\r\n    accessor repository: Repository<any> | undefined\r\n    accessor useCase: UseCase<any, any> | undefined\r\n\r\n    abstract render(): void\r\n}\r\n","import { Tile } from \"../../domain/Tile.mjs\";\r\nimport { Command } from \"../UseCase.mjs\";\r\nimport { Presenter } from \"../Presenter.mjs\";\r\nimport { Repository } from \"../Repository.mjs\";\r\n\r\nexport class RenderTile implements Command<number> {\r\n    constructor(\r\n        readonly presenter: Presenter<Tile>,\r\n        readonly repository: Repository<Tile>\r\n    ) { }\r\n\r\n    execute(id: number): void {\r\n        const tile = this.repository.get(id);\r\n        this.presenter.present(tile);\r\n    }\r\n}\r\n","export class Tile {\r\n    constructor(\r\n        readonly id: number,\r\n        readonly size: number,\r\n        readonly url: string\r\n    ) { }\r\n}\r\n","import { Repository } from \"../application/Repository.mjs\";\r\nimport { Tile } from \"../domain/Tile.mjs\";\r\n\r\nexport class TileRepository implements Repository<Tile> {\r\n    get(id: number): Tile {\r\n        const size = 64,\r\n            url = require(`./assets/${id}-${size}.png`)\r\n        return new Tile(id, size, url);\r\n    }\r\n}","import { Presenter } from \"../../application/Presenter.mjs\";\r\nimport { Tile } from \"../../domain/Tile.mjs\";\r\n\r\nexport class TilePresenter implements Presenter<Tile> {\r\n    constructor(public elContainer: HTMLElement) { }\r\n\r\n    present({ id, size, url }: Tile): void {\r\n        const htmlTile = Object.assign(document.createElement('img'), {\r\n            src: url,\r\n            width: size,\r\n            height: size,\r\n            alt: `tile ${id}`\r\n        });\r\n        this.elContainer.appendChild(htmlTile);\r\n    }\r\n}\r\n","import { Control } from \"../../application/Control.mjs\";\r\nimport { RenderTile } from \"../../application/usecases/RenderTile.mjs\";\r\nimport { TileRepository } from \"../../data/TileRepository.mjs\";\r\nimport { TilePresenter } from \"./TilePresenter.mjs\";\r\n\r\nexport class TileControl extends Control {\r\n    override accessor presenter = new TilePresenter(document.body);\r\n    override accessor repository = new TileRepository();\r\n    override accessor useCase = new RenderTile(this.presenter, this.repository);\r\n\r\n    constructor(readonly id: number) { super() }\r\n\r\n    render() { this.useCase.execute(this.id); }\r\n}\r\n","import { TileControl } from \"./presentation/Tile/TileControl.mjs\";\r\n\r\nconst tiles = [\r\n    new TileControl(0),\r\n    new TileControl(1),\r\n    new TileControl(2)\r\n]\r\n\r\ntiles.forEach(tile => tile.render())"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","__webpack_module_cache__","moduleId","cachedModule","undefined","__webpack_modules__","obj","prop","prototype","hasOwnProperty","call","scriptUrl","url","replace","p","Control","presenter","repository","useCase","RenderTile","constructor","execute","tile","this","get","present","Tile","size","TileRepository","TilePresenter","elContainer","htmlTile","assign","document","createElement","src","width","height","alt","appendChild","TileControl","body","super","render","forEach"],"sourceRoot":""}